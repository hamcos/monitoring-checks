#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2014             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# Copyright by Mathias Kettner and Mathias Kettner GmbH.  All rights reserved.
#
# Check_MK is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.
#
# Check_MK is  distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY;  without even the implied warranty of
# MERCHANTABILITY  or  FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have  received  a copy of the  GNU  General Public
# License along with Check_MK.  If  not, email to mk@mathias-kettner.de
# or write to the postal address provided at www.mathias-kettner.de
#
# @author Robin Schneider <robin.schneider@hamcos.de>
# @company hamcos IT Service GmbH http://www.hamcos.de

# http://h3c.com/portal/Products___Solutions/Technology/System_Management/Configuration_Example/200912/656451_57_0.htm
# Tested with:
#   * HP Comware Platform Software, Software Version 5.20.99 Release 2221P02 HP A5120-48G EI Switch with 2 Interface Slots Copyright (c) 2010-2014 Hewlett-Packard Development Company, L.P.
#   * HP Comware Platform Software, Software Version 5.20.105, Release 1808P25 HP A5820AF-24XG Switch Copyright (c) 2010-2014 Hewlett-Packard Development Company, L.P.
#
# Example SNMP values:
# HH3C-ENTITY-EXT-MIB::hh3cEntityExtCpuUsage.112 = INTEGER: 8
# HH3C-ENTITY-EXT-MIB::hh3cEntityExtCpuUsage.122 = INTEGER: 8
# HH3C-ENTITY-EXT-MIB::hh3cEntityExtCpuUsage.132 = INTEGER: 8
# ENTITY-MIB::entPhysicalDescr.112 = STRING: MODULE LEVEL1
# ENTITY-MIB::entPhysicalDescr.113 = STRING: PSU
# ENTITY-MIB::entPhysicalDescr.114 = STRING: PSU
# ENTITY-MIB::entPhysicalDescr.116 = STRING: FAN UNIT
# ENTITY-MIB::entPhysicalDescr.117 = STRING: FAN UNIT
# ENTITY-MIB::entPhysicalDescr.118 = STRING: SENSOR
# ENTITY-MIB::entPhysicalDescr.121 = STRING: SENSOR
# ENTITY-MIB::entPhysicalDescr.122 = STRING: MODULE LEVEL1
# ENTITY-MIB::entPhysicalDescr.132 = STRING: MODULE LEVEL1


hh3c_entity_cpu_default_levels = (80.0, 90.0)

def inventory_hh3c_entity_cpu(info):
    # Debug: lets see how the data we get looks like
    # import pprint ; pprint.pprint(info)

    module = 1.0

    for nr, elem in enumerate(info):
        ent_physical_descr, cpu_util = elem
        cpu_util = int(cpu_util)
        name = _hh3c_entity_get_name_for_sensor(nr, ent_physical_descr, module)
        if name and cpu_util > 0 and cpu_util <= 100:
            yield name, 'hh3c_entity_cpu_default_levels'

            module += 1.0

def check_hh3c_entity_cpu(item, params, info):
    module = 1.0

    for nr, elem in enumerate(info):
        if unicode(item).startswith(unicode(nr) + ' '):
            ent_physical_descr, cpu_util = elem
            cpu_util = int(cpu_util)
            if cpu_util > 0 and cpu_util <= 100:
                status = 0
                output = ''
                if cpu_util >= params[1]:
                    status = 2
                    output = ' (Above %d%%)' % params[1]
                elif cpu_util >= params[0]:
                    status = 1
                    output = ' (Above %d%%)' % params[0]

                perfdata = [('util', cpu_util, params[0], params[1], 0, 100)]

                return (status, 'CPU utilization is %d%% %s' % (cpu_util, output), perfdata)
                module += 1.0

    return (3, "Invalid information in snmp data")

check_info['hh3c_entity_cpu'] = {
    'check_function'        : check_hh3c_entity_cpu,
    'inventory_function'    : inventory_hh3c_entity_cpu,
    'service_description'   : "CPU utilization",
    'snmp_scan_function'    : lambda oid: 'HP Comware Platform Software' in oid('.1.3.6.1.2.1.1.1.0') and \
        oid('.1.3.6.1.4.1.25506.2.6.1.1.1.1.6.1') != None,
    'snmp_info'             : ( '.1.3.6.1', ['2.1.47.1.1.1.1.2', '4.1.25506.2.6.1.1.1.1.6'] ),
    'has_perfdata'          : True,
    'includes'              : [ 'hh3c_entity.include' ],
    'group'                 : 'cpu_utilization',
}
