#!/usr/bin/env python
# encoding: utf-8
# @author Robin Schneider <robin.schneider@hamcos.de>
# @company hamcos IT Service GmbH http://www.hamcos.de
# @license GPLv2 <https://www.gnu.org/licenses/gpl-2.0.html>
# It depends on https://communities.netapp.com/docs/DOC-1152

import sys, time
from common import *

# sys.path.append("/usr/local/lib/python/NetApp/")
from NaServer import *
from datetime import datetime

args = len(sys.argv) - 1
if (args < 3):
    print_usage()

filer    = sys.argv[1]
user     = sys.argv[2]
password = sys.argv[3]

max_age_days = 1
if args > 3:
    max_age_days = int(sys.argv[4])

cur_time = int(time.time())
time_before = cur_time - max_age_days*24*60*60

s = NaServer(filer, 1, 1)
s.set_server_type("Filer")
s.set_admin_user(user, password)
s.set_transport_type("HTTPS")

output = s.invoke('volume-list-info')

volumes_old_snapshot = []
volumes_ok = []
if (output.results_errno() != 0):
    r = output.results_reason()
    print("Failed: \n" + str(r))
else:
    output = output.child_get('volumes')
    for i in output.children_get(): # go through volumes
        name = i.child_get_string("name")
        output = s.invoke('snapshot-list-info', 'target-name', name, 'target-type', 'volume')
        if (output.results_errno() != 0):
            r = output.results_reason()
            print("Failed: \n" + str(r))
        else:
            output = output.child_get('snapshots')
            for i in output.children_get():
                # name = i.child_get_string("name")
                access_time = int(i.child_get_string('access-time'))
                if access_time < time_before:
                    volumes_old_snapshot.append('%s: %s' % (name, datetime.fromtimestamp(access_time).strftime('%Y-%m-%d %H:%M:%S')))
                else:
                    volumes_ok.append(name)
                break

    output = 'OK -'
    exit_status = 0
    if len(volumes_old_snapshot) != 0:
       output = 'WARN -'
       exit_status = 1
       output += ' %s' % ', '.join(volumes_old_snapshot)
    elif len(volumes_ok) != 0:
       output += ' %s' % ', '.join(volumes_ok)
    print output
    sys.exit(exit_status)
